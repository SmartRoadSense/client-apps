using System;

namespace SmartRoadSense {

    /// <summary>
    /// Information about a recording session.
    /// </summary>
    public class SessionInfo {

        public SessionInfo(VehicleType vehicle, AnchorageType anchorage, int numberOfPeople) {
            TrackId = Guid.NewGuid();
            StartTimestampUtc = DateTime.UtcNow;
            Vehicle = vehicle;
            Anchorage = anchorage;
            NumberOfPeople = numberOfPeople;
        }

        /// <summary>
        /// Gets an unique ID that identifies the track generated by the current session.
        /// </summary>
        public Guid TrackId { get; }

        /// <summary>
        /// Gets when the current recording session was started, in UTC.
        /// </summary>
        public DateTime StartTimestampUtc { get; }

        // TODO: value must be updated when changed by user
        public VehicleType Vehicle { get; }

        // TODO: value must be updated when changed by user
        public AnchorageType Anchorage { get; }

        // TODO: value must be updated when changed by user
        public int NumberOfPeople { get; }

        public double MinimumMeasurement { get; private set; } = double.MaxValue;

        public double MaximumMeasurement { get; private set; } = double.MinValue;

        public double LastMeasurement { get; private set; } = double.NaN;

        public void NewMeasurement(double value) {
            LastMeasurement = value;

            if (value > MaximumMeasurement)
                MaximumMeasurement = value;
            if (value < MinimumMeasurement)
                MinimumMeasurement = value;
        }

    }

}

